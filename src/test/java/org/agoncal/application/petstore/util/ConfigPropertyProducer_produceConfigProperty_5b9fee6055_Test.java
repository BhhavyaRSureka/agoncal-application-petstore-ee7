// Test generated by RoostGPT for test JavyaUnitTesting using AI Type Open AI and AI Model gpt-4

package org.agoncal.application.petstore.util;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import javax.enterprise.inject.spi.InjectionPoint;
import java.util.Properties;
import java.lang.annotation.Annotation;

public class ConfigPropertyProducer_produceConfigProperty_5b9fee6055_Test {

    private static Properties props;
    private ConfigPropertyProducer configPropertyProducer;
    private InjectionPoint ip;
    private ConfigProperty configProperty;

    @Before
    public void setup() {
        props = new Properties();
        props.setProperty("testKey", "testValue");
        configPropertyProducer = new ConfigPropertyProducer();
        ip = mock(InjectionPoint.class);
        configProperty = mock(ConfigProperty.class);
        when(ip.getAnnotated()).thenReturn(new Annotated() {
            @Override
            public <T extends Annotation> T getAnnotation(Class<T> annotationType) {
                return (T) configProperty;
            }
        });
    }

    @Test
    public void testProduceConfigProperty_ValidKey() {
        when(configProperty.value()).thenReturn("testKey");
        String result = configPropertyProducer.produceConfigProperty(ip);
        assertEquals("testValue", result);
    }

    @Test
    public void testProduceConfigProperty_InvalidKey() {
        when(configProperty.value()).thenReturn("invalidKey");
        String result = configPropertyProducer.produceConfigProperty(ip);
        assertNull(result);
    }
}
