/*
Test generated by RoostGPT for test GeminiTest using AI Type Vertex AI and AI Model gemini-pro

 You are given the code snippet of the hashCode() method. Write test scenarios to validate the business logic of the given code snippet.

**Test Scenario 1:**
**Objective:** Verify that the hashCode is generated correctly for different login values.

**Test Steps:**
1. Create two Customer objects with different login values.
2. Call the hashCode() method on each Customer object and store the results in variables.
3. Assert that the hashCodes are different for the two Customer objects.

**Expected Result:**
The hashCodes should be different for the two Customer objects.

**Test Scenario 2:**
**Objective:** Verify that the hashCode is generated correctly for the same login value.

**Test Steps:**
1. Create two Customer objects with the same login value.
2. Call the hashCode() method on each Customer object and store the results in variables.
3. Assert that the hashCodes are the same for the two Customer objects.

**Expected Result:**
The hashCodes should be the same for the two Customer objects.

**Test Scenario 3:**
**Objective:** Verify that the hashCode is generated correctly for null login value.

**Test Steps:**
1. Create a Customer object with a null login value.
2. Call the hashCode() method on the Customer object and store the result in a variable.
3. Assert that the hashCode is not null.

**Expected Result:**
The hashCode should not be null.

**Test Scenario 4:**
**Objective:** Verify that the hashCode is generated correctly for an empty login value.

**Test Steps:**
1. Create a Customer object with an empty login value.
2. Call the hashCode() method on the Customer object and store the result in a variable.
3. Assert that the hashCode is not null.

**Expected Result:**
The hashCode should not be null.
*/

              - Do not generate methods, use existing ones only.
              - Do not generate fields, use existing ones only.

              REGENERATE THE TEST CASE :
              
              /*
Test generated by RoostGPT for test GeminiTest using AI Type Vertex AI and AI Model gemini-pro

 You are given the code snippet of the hashCode() method. Write test scenarios to validate the business logic of the given code snippet.

**Test Scenario 1:**
**Objective:** Verify that the hashCode is generated correctly for different login values.

**Test Steps:**
1. Create two Customer objects with different login values.
2. Call the hashCode() method on each Customer object and store the results in variables.
3. Assert that the hashCodes are different for the two Customer objects.

**Expected Result:**
The hashCodes should be different for the two Customer objects.

**Test Scenario 2:**
**Objective:** Verify that the hashCode is generated correctly for the same login value.

**Test Steps:**
1. Create two Customer objects with the same login value.
2. Call the hashCode() method on each Customer object and store the results in variables.
3. Assert that the hashCodes are the same for the two Customer objects.

**Expected Result:**
The hashCodes should be the same for the two Customer objects.

**Test Scenario 3:**
**Objective:** Verify that the hashCode is generated correctly for null login value.

**Test Steps:**
1. Create a Customer object with a null login value.
2. Call the hashCode() method on the Customer object and store the result in a variable.
3. Assert that the hashCode is not null.

**Expected Result:**
The hashCode should not be null.

**Test Scenario 4:**
**Objective:** Verify that the hashCode is generated correctly for an empty login value.

**Test Steps:**
1. Create a Customer object with an empty login value.
2. Call the hashCode() method on the Customer object and store the result in a variable.
3. Assert that the hashCode is not null.

**Expected Result:**
The hashCode should not be null.
*/
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;

import static org.junit.jupiter.api.Assertions.assertEquals;

class Customer_hashCode_5a2657087a_Test {

    @ParameterizedTest
    @CsvSource({
            "login1, login2",
            "login, login"
    })
    void shouldReturnDifferentHashCodeForDifferentLoginValues(String login1, String login2) {
        Customer customer1 = new Customer();
        customer1.setLogin(login1);
        Customer customer2 = new Customer();
        customer2.setLogin(login2);

        int hashCode1 = customer1.hashCode();
        int hashCode2 = customer2.hashCode();

        assertEquals(hashCode1, customer1.hashCode());
        assertEquals(hashCode2, customer2.hashCode());
        assertNotEquals(hashCode1, hashCode2);
    }

    @Test
    void shouldReturnSameHashCodeForSameLoginValue() {
        Customer customer1 = new Customer();
        customer1.setLogin("login");
        Customer customer2 = new Customer();
        customer2.setLogin("login");

        int hashCode1 = customer1.hashCode();
        int hashCode2 = customer2.hashCode();

        assertEquals(hashCode1, customer1.hashCode());
        assertEquals(hashCode2, customer2.hashCode());
        assertEquals(hashCode1, hashCode2);
    }

    @Test
    void shouldReturnNonZeroHashCodeForNullLoginValue() {
        Customer customer = new Customer();
        customer.setLogin(null);

        int hashCode = customer.hashCode();

        assertEquals(hashCode, customer.hashCode());
        assertNotEquals(0, hashCode);
    }

    @Test
    void shouldReturnNonZeroHashCodeForEmptyLoginValue() {
        Customer customer = new Customer();
        customer.setLogin("");

        int hashCode = customer.hashCode();

        assertEquals(hashCode, customer.hashCode());
        assertNotEquals(0, hashCode);
    }
}
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
