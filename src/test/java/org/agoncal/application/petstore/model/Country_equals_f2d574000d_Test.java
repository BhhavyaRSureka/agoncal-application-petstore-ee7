/*
Test generated by RoostGPT for test GeminiTest using AI Type Vertex AI and AI Model gemini-pro

 You have been working in various projects for some time now. You have been tasked to write test scenarios for a code snippet function equals to validate business logic. You are not supposed to write any test code to validate.

**Test Scenario 1:**

**Objective:** To test if the equals method correctly compares two Country objects with the same ISO code.

**Test Steps:**

1. Create two Country objects, country1 and country2, with the same ISO code.
2. Assert that country1.equals(country2) returns true.

**Expected Result:**

The assertion should pass, indicating that the equals method correctly identifies two Country objects with the same ISO code as equal.

**Test Scenario 2:**

**Objective:** To test if the equals method correctly compares two Country objects with different ISO codes.

**Test Steps:**

1. Create two Country objects, country1 and country2, with different ISO codes.
2. Assert that country1.equals(country2) returns false.

**Expected Result:**

The assertion should pass, indicating that the equals method correctly identifies two Country objects with different ISO codes as not equal.

**Test Scenario 3:**

**Objective:** To test if the equals method correctly handles the case when one of the Country objects is null.

**Test Steps:**

1. Create a Country object, country1, and set country2 to null.
2. Assert that country1.equals(country2) returns false.

**Expected Result:**

The assertion should pass, indicating that the equals method correctly handles the case when one of the Country objects is null.

**Test Scenario 4:**

**Objective:** To test if the equals method correctly handles the case when the argument passed is not a Country object.

**Test Steps:**

1. Create a Country object, country1, and create an object of a different class, object2.
2. Assert that country1.equals(object2) returns false.

**Expected Result:**

The assertion should pass, indicating that the equals method correctly handles the case when the argument passed is not a Country object.
*/
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Suite;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;

@RunWith(Suite.class)
@Suite.SuiteClasses({
        Country_equals_f2d574000d_Test.Scenario1.class,
        Country_equals_f2d574000d_Test.Scenario2.class,
        Country_equals_f2d574000d_Test.Scenario3.class,
        Country_equals_f2d574000d_Test.Scenario4.class
})
public class Country_equals_f2d574000d_Test {

    public static class Scenario1 {

        @Test
        public void testEqualsWithSameIsoCode() {
            Country country1 = new Country("US", "United States", "United States", "USA", "840");
            Country country2 = new Country("US", "United States", "United States", "USA", "840");

            assertEquals(country1, country2);
        }
    }

    public static class Scenario2 {

        @Test
        public void testEqualsWithDifferentIsoCode() {
            Country country1 = new Country("US", "United States", "United States", "USA", "840");
            Country country2 = new Country("CA", "Canada", "Canada", "CAN", "124");

            assertNotEquals(country1, country2);
        }
    }

    public static class Scenario3 {

        @Test
        public void testEqualsWithNull() {
            Country country1 = new Country("US", "United States", "United States", "USA", "840");

            assertNotEquals(country1, null);
        }
    }

    public static class Scenario4 {

        @Test
        public void testEqualsWithDifferentObject() {
            Country country1 = new Country("US", "United States", "United States", "USA", "840");
            String str = "Hello";

            assertNotEquals(country1, str);
        }
    }
}
