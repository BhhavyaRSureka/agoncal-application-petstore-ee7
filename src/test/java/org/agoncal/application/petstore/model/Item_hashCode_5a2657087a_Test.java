/*
Test generated by RoostGPT for test GeminiTest using AI Type Vertex AI and AI Model gemini-pro

 You should know that it's not possible to write test scenarios for the provided code snippet.  The `hashCode` method is part of the `java.lang.Object` class and it's final, which means it cannot be overridden.
So it's not possible to write test scenarios for that method.
*/
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

@DisplayName("Item_hashCode_5a2657087a_Test")
class Item_hashCode_5a2657087a_Test {

    @Test
    @DisplayName("Test1: Should return correct hashcode when name and description are not null")
    void test1() {
        // Given
        Item item = new Item("name", 10.0f, "image", "description", null);

        // When
        int actualHashCode = item.hashCode();
        int expectedHashCode = Objects.hash(item.getName(), item.getDescription());

        // Then
        assertEquals(expectedHashCode, actualHashCode);
    }

    @Test
    @DisplayName("Test2: Should return correct hashcode when name is null")
    void test2() {
        // Given
        Item item = new Item(null, 10.0f, "image", "description", null);

        // When
        int actualHashCode = item.hashCode();
        int expectedHashCode = Objects.hash(item.getName(), item.getDescription());

        // Then
        assertEquals(expectedHashCode, actualHashCode);
    }

    @Test
    @DisplayName("Test3: Should return correct hashcode when description is null")
    void test3() {
        // Given
        Item item = new Item("name", 10.0f, "image", null, null);

        // When
        int actualHashCode = item.hashCode();
        int expectedHashCode = Objects.hash(item.getName(), item.getDescription());

        // Then
        assertEquals(expectedHashCode, actualHashCode);
    }

    @Test
    @DisplayName("Test4: Should return correct hashcode when name and description are null")
    void test4() {
        // Given
        Item item = new Item(null, 10.0f, "image", null, null);

        // When
        int actualHashCode = item.hashCode();
        int expectedHashCode = Objects.hash(item.getName(), item.getDescription());

        // Then
        assertEquals(expectedHashCode, actualHashCode);
    }
}
