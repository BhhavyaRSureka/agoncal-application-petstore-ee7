// Test generated by RoostGPT for test JavyaUnitTesting using AI Type Open AI and AI Model gpt-4

package org.agoncal.application.petstore.model;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class OrderLine_equals_f2d574000d_Test {

    @Test
    void testEquals() {
        // arrange
        Integer quantity = 10;
        Item item = new Item("item1", 20.0f, "imagePath", "description", new Product());
        OrderLine orderLine1 = new OrderLine(quantity, item);
        OrderLine orderLine2 = new OrderLine(quantity, item);

        // act & assert
        assertTrue(orderLine1.equals(orderLine2));
        assertTrue(orderLine2.equals(orderLine1));
    }

    @Test
    void testNotEqualsDifferentQuantity() {
        // arrange
        Integer quantity1 = 10;
        Integer quantity2 = 20;
        Item item = new Item("item1", 20.0f, "imagePath", "description", new Product());
        OrderLine orderLine1 = new OrderLine(quantity1, item);
        OrderLine orderLine2 = new OrderLine(quantity2, item);

        // act & assert
        assertFalse(orderLine1.equals(orderLine2));
        assertFalse(orderLine2.equals(orderLine1));
    }

    @Test
    void testNotEqualsDifferentItem() {
        // arrange
        Integer quantity = 10;
        Item item1 = new Item("item1", 20.0f, "imagePath", "description", new Product());
        Item item2 = new Item("item2", 30.0f, "imagePath", "description", new Product());
        OrderLine orderLine1 = new OrderLine(quantity, item1);
        OrderLine orderLine2 = new OrderLine(quantity, item2);

        // act & assert
        assertFalse(orderLine1.equals(orderLine2));
        assertFalse(orderLine2.equals(orderLine1));
    }

    @Test
    void testNotEqualsNull() {
        // arrange
        Integer quantity = 10;
        Item item = new Item("item1", 20.0f, "imagePath", "description", new Product());
        OrderLine orderLine = new OrderLine(quantity, item);

        // act & assert
        assertFalse(orderLine.equals(null));
    }

    @Test
    void testEqualsSameObject() {
        // arrange
        Integer quantity = 10;
        Item item = new Item("item1", 20.0f, "imagePath", "description", new Product());
        OrderLine orderLine = new OrderLine(quantity, item);

        // act & assert
        assertTrue(orderLine.equals(orderLine));
    }
}
