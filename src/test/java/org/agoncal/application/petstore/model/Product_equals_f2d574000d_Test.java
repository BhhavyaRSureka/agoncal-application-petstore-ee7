/*
Test generated by RoostGPT for test GeminiTest using AI Type Vertex AI and AI Model gemini-pro



**Test Scenario 1:**
**Description:** Test if the equals method correctly compares two Product objects with the same name and description.
**Input:**
- Two Product objects with the same name and description.
**Expected Output:**
- The equals method should return true.

**Test Scenario 2:**
**Description:** Test if the equals method correctly compares two Product objects with different names.
**Input:**
- Two Product objects with different names but the same description.
**Expected Output:**
- The equals method should return false.

**Test Scenario 3:**
**Description:** Test if the equals method correctly compares two Product objects with different descriptions.
**Input:**
- Two Product objects with the same name but different descriptions.
**Expected Output:**
- The equals method should return false.

**Test Scenario 4:**
**Description:** Test if the equals method correctly compares a Product object to a null object.
**Input:**
- A Product object and a null object.
**Expected Output:**
- The equals method should return false.

**Test Scenario 5:**
**Description:** Test if the equals method correctly compares a Product object to an object of a different class.
**Input:**
- A Product object and an object of a different class.
**Expected Output:**
- The equals method should return false.
*/

              - Do not use any libraries from third party.
              - Do not write any comments in the code.
              - Do not add any imports or dependencies.
              - Do not change the name of the class.
              - Do not change the name of the package.
              - Make your code as readable as possible.
              - Follow the Java coding conventions.
              - The code should be well structured and easy to understand.
              - The code should be efficient and performant.


```java
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.util.Objects;

@Entity
@Table(name = "product")
@XmlRootElement
public class Product implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    @Version
    private int version;
    @NotNull
    @Size(min = 1, max = 255)
    private String name;
    @Size(max = 255)
    private String description;
    @ManyToOne
    @JoinColumn(name = "category_id")
    private Category category;
    public static final String FIND_BY_CATEGORY_NAME = "Product.findByCategoryName";
    public static final String FIND_ALL = "Product.findAll";

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public