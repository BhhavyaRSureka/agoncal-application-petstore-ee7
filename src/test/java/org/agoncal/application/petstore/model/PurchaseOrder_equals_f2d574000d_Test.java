// Test generated by RoostGPT for test JavyaUnitTesting using AI Type Open AI and AI Model gpt-4

package org.agoncal.application.petstore.model;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

public class PurchaseOrder_equals_f2d574000d_Test {

    private PurchaseOrder purchaseOrder1, purchaseOrder2;
    private Customer mockCustomer;
    private Date mockDate;
    
    @Before
    public void setup() {
        mockCustomer = mock(Customer.class);
        mockDate = mock(Date.class);
        purchaseOrder1 = new PurchaseOrder();
        purchaseOrder2 = new PurchaseOrder();
        purchaseOrder1.setCustomer(mockCustomer);
        purchaseOrder1.setOrderDate(mockDate);
    }
    
    @Test
    public void testEquals_SameObject() {
        assertTrue(purchaseOrder1.equals(purchaseOrder1));
    }
    
    @Test
    public void testEquals_NullObject() {
        assertFalse(purchaseOrder1.equals(null));
    }
    
    @Test
    public void testEquals_DifferentClassObject() {
        assertFalse(purchaseOrder1.equals(new String("Test")));
    }

    @Test
    public void testEquals_SameClassObject() {
        purchaseOrder2.setCustomer(mockCustomer);
        purchaseOrder2.setOrderDate(mockDate);
        assertTrue(purchaseOrder1.equals(purchaseOrder2));
    }

    @Test
    public void testEquals_DifferentOrderDate() {
        purchaseOrder2.setCustomer(mockCustomer);
        purchaseOrder2.setOrderDate(new Date());
        assertFalse(purchaseOrder1.equals(purchaseOrder2));
    }
    
    @Test
    public void testEquals_DifferentCustomer() {
        purchaseOrder2.setCustomer(new Customer());
        purchaseOrder2.setOrderDate(mockDate);
        assertFalse(purchaseOrder1.equals(purchaseOrder2));
    }
}
