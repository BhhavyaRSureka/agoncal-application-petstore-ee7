// Test generated by RoostGPT for test JavyaUnitTesting using AI Type Open AI and AI Model gpt-4

package org.agoncal.application.petstore.view;

import org.junit.Before;
import org.junit.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import static org.mockito.ArgumentMatchers.*;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.verify;

public class AbstractBean_addErrorMessage_c5f6545bb7_Test {

    @Mock
    private FacesContext facesContext;

    @Mock
    private FacesMessage facesMessage;

    private AbstractBean abstractBean;

    @Before
    public void setup() {
        MockitoAnnotations.initMocks(this);
        abstractBean = new AbstractBean();
    }

    @Test
    public void testAddErrorMessage() {
        doReturn(facesContext).when(FacesContext.getCurrentInstance());
        doReturn("Test error message").when(abstractBean.getMessage(any(FacesContext.class), anyString(), anyVararg()));
        abstractBean.addErrorMessage("Test error message", "arg1", "arg2");
        verify(facesContext).addMessage(null, facesMessage);
    }

    @Test
    public void testAddErrorMessageWithNoArgs() {
        doReturn(facesContext).when(FacesContext.getCurrentInstance());
        doReturn("Test error message without args").when(abstractBean.getMessage(any(FacesContext.class), anyString()));
        abstractBean.addErrorMessage("Test error message without args");
        verify(facesContext).addMessage(null, facesMessage);
    }
}
