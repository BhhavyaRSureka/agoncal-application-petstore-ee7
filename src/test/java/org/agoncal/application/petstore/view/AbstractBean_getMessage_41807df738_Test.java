// Test generated by RoostGPT for test JavyaUnitTesting using AI Type Open AI and AI Model gpt-4

package org.agoncal.application.petstore.view;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.context.FacesMessage.Severity;
import java.util.Locale;
import java.util.ResourceBundle;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.*;

@RunWith(MockitoJUnitRunner.class)
public class AbstractBean_getMessage_41807df738_Test {

    @Mock
    private FacesContext facesContext;

    @Mock
    private ResourceBundle resourceBundle;

    private AbstractBean abstractBean;

    @Before
    public void setup() {
        abstractBean = new AbstractBean();
    }

    @Test
    public void testGetMessage() {
        String msgKey = "testKey";
        Object[] args = {"arg1", "arg2"};
        when(facesContext.getViewRoot().getLocale()).thenReturn(Locale.ENGLISH);
        when(Thread.currentThread().getContextClassLoader()).thenReturn(getClass().getClassLoader());
        when(resourceBundle.getString(msgKey)).thenReturn("Test message with args: {0}, {1}");

        String result = abstractBean.getMessage(facesContext, msgKey, args);

        assertEquals("Test message with args: arg1, arg2", result);
    }

    @Test(expected = NullPointerException.class)
    public void testGetMessage_NullFacesContext() {
        String msgKey = "testKey";
        Object[] args = {"arg1", "arg2"};

        abstractBean.getMessage(null, msgKey, args);
    }

    @Test(expected = NullPointerException.class)
    public void testGetMessage_NullMsgKey() {
        Object[] args = {"arg1", "arg2"};
        when(facesContext.getViewRoot().getLocale()).thenReturn(Locale.ENGLISH);
        when(Thread.currentThread().getContextClassLoader()).thenReturn(getClass().getClassLoader());

        abstractBean.getMessage(facesContext, null, args);
    }

    @Test(expected = NullPointerException.class)
    public void testGetMessage_NullArgs() {
        String msgKey = "testKey";
        when(facesContext.getViewRoot().getLocale()).thenReturn(Locale.ENGLISH);
        when(Thread.currentThread().getContextClassLoader()).thenReturn(getClass().getClassLoader());

        abstractBean.getMessage(facesContext, msgKey, null);
    }
}
