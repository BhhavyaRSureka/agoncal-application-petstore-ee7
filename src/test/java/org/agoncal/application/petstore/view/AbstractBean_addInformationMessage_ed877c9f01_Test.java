// Test generated by RoostGPT for test JavyaUnitTesting using AI Type Open AI and AI Model gpt-4

package org.agoncal.application.petstore.view;

import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import static org.mockito.Mockito.*;

public class AbstractBean_addInformationMessage_ed877c9f01_Test {

    @Mock
    private FacesContext facesContext;

    @Mock
    private FacesMessage facesMessage;

    @Mock
    private AbstractBean abstractBean;

    public void setup() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testAddInformationMessage() {
        setup();
        when(facesContext.getCurrentInstance()).thenReturn(facesContext);
        doNothing().when(facesContext).addMessage(anyString(), any(FacesMessage.class));
        when(abstractBean.getMessage(facesContext, "info", "test")).thenReturn("info test");

        abstractBean.addInformationMessage("info", "test");

        verify(facesContext, times(1)).addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "info test", null));
    }

    @Test
    public void testAddInformationMessageWithMultipleArgs() {
        setup();
        when(facesContext.getCurrentInstance()).thenReturn(facesContext);
        doNothing().when(facesContext).addMessage(anyString(), any(FacesMessage.class));
        when(abstractBean.getMessage(facesContext, "info", "test1", "test2")).thenReturn("info test1 test2");

        abstractBean.addInformationMessage("info", "test1", "test2");

        verify(facesContext, times(1)).addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "info test1 test2", null));
    }

}
