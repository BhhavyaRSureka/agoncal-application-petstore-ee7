// Test generated by RoostGPT for test JavyaUnitTesting using AI Type Open AI and AI Model gpt-4

package org.agoncal.application.petstore.view;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import static org.mockito.Mockito.*;

public class AbstractBean_addInformationMessage_ed877c9f01_Test {

    private AbstractBean abstractBean;
    @Mock
    private FacesContext facesContext;
    @Mock
    private FacesMessage facesMessage;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
        abstractBean = new AbstractBean();
        abstractBean.logger = Logger.getLogger(AbstractBean.class.getName());
        FacesContext.setCurrentInstance(facesContext);
    }

    @Test
    public void testAddInformationMessage() {
        String message = "testMessage";
        Object[] args = new Object[]{"arg1", "arg2"};
        doReturn(facesMessage).when(facesContext).addMessage(any(), any(FacesMessage.class));
        doReturn("formattedMessage").when(abstractBean).getMessage(facesContext, message, args);

        abstractBean.addInformationMessage(message, args);

        verify(facesContext, times(1)).addMessage(any(), any(FacesMessage.class));
    }

    @Test
    public void testAddInformationMessage_NullContext() {
        FacesContext.setCurrentInstance(null);
        String message = "testMessage";
        Object[] args = new Object[]{"arg1", "arg2"};

        abstractBean.addInformationMessage(message, args);

        verify(facesContext, never()).addMessage(any(), any(FacesMessage.class));
    }
}
